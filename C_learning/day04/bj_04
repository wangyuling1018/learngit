
上节课 :
1.第一个C程序
2.gcc编译器

今日内容 :
一.变量
任务 : 计算圆的面积
必须使用数据计算
    π * r * r = 面积
    π * 5 * 5 = 面积 = 存储在内存中

将来可以通过首地址来找到对应的存储区
数据存储在内存 - 内存字节中 - 存储区 - 首地址 - 找到存储区
问题 : 如何将数据存储到存储区中呢?
原则 : 任何程序访问内存前先分配

变量 : 在程序执行过程中, 其值可以改变的量称为变量
常量 : 在程序执行过程中, 其值不可以改变的量称为常量
    10  100 0.5 - 直接常量
    标识符
    符号常量
定义变量的语法 :
    分配内存的语法
    数据类型 变量名 = 初始值;
举例 :
    int a = 520;
表面 :
    定义整型数据类型变量a并且将a的值初始化为520
本质 :
    分配4字节内存存储区, 给这块存储区打个标签叫a, 将数据520存储到该存储区中
注意 :
    = : 表示的是赋值的意思
    int a = 520; 将数520赋值给变量a, 将数据520放到变量a的内存中

    a = 521;//将数据521赋值给a, 将数据521放到变量a的内存中

a为啥叫做变量 -
    a本质是给4字节的存储区起的名字, 后续可以直接使用变量名a来访问这4个字节存储区

关键字 : C语言提供了一些特殊的字符, 具有特殊的含义,可以直接拿来使用
    int  整型数据类型

int 2var;error

ok
 int _2var;
 int val;

int int = 100;//error
int return = 0;//error

int var = 100; //4字节存储区存储100, var
int VAR = 100; //4字节存储区存储100, VAR

尽量见名知意
    int a = 18;//半年后 - 纳闷儿 - a是啥呀?
    int age = 18;
    int height = 182;
    int weight = 140;

    int nainling = 18;
    int shengao = 182;
    int tizhong = 140;//no
     
不同企业有不同需求
驼峰命名 - Windows
    学生的年龄
        int stuAge = 18;
        int createDigWindow(void);
下划线命名 - Linux
    学生年龄
        int stu_age = 18;
        int create_dig_window(void);

编程规范 - 注意的事儿
    单条语句可以写在任意多行内(写在一行的代码，也可以分多行写)
    必要的缩进使代码更加清晰
        原则 - 见到花括号无脑使用tab键
    适当的空行划分出逻辑单元
        不同的逻辑之间使用空行将其隔开
    巧用空格让代码更加分明（int a=12; -> int a = 12;看起来不那么拥挤）
技巧 :
    shift + v 上下选中
    =
    自动tab好
两个常用的标准C库函数 - 输入输出
必须搞明白
printf - print format  - 按照一定的格式输出 - 格式化输出
printf("格式化字符串", ...);
双引号里面就是我们将来输出的内容
01printf.c

scanf - scan format - 按照一定格式扫描 - 格式化输入
scanf("格式化字符串", 地址表);
    功能 : 从键盘输入一个数据, 存储起来
02scanf.c
& : 小麻花 取地址 获取变量的首地址
scanf双引号里面 - 只能由占位符 - 占位符之间不能隔开 - 不能有其他内容

需求 : 从键盘获取一个人的年龄, 然后输出到屏幕上
    存储到哪里呢 - 内存 - 存储到内存上 - 分配内存 - 变量
    定义变量 - 分配了存储区来存储数据  - 表现为存储从键盘获取的数据


ctrl + alt + t -> 新建终端

int a , b = 100;

定义变量 :
    初始化 - 值确定
    不初始化 - 随机数

redefinition re-再一次
    definition - 定义
重定义 - 一个变量只能定义一次

三.数据类型
    int - 数据类型
    使用一个小数来描述身高 - 更加合适 - int做不到

功能 :

    char - 字符类型 - 1字节整数(本质上一字节整数) - 1字节 - -128~127
    unsigned char - 0~255

    int - -2^31 ~ 2^31-1

    long -
        32系统 - 4字节 - -2^31 ~ 2^31-1
        64系统 - 8字节 - -2^63 ~ 2^63-1

    unsigned long
        32系统 - 4字节 - 0 ~ 2^32-1
        64系统 - 8字节 - 0 ~ 2^64-1

    float - 4 - +-[1.2*10^38 ~ 3.4*10^38]
    double - 8 - +-[2.2*10^308 ~ 1.8*10^308]

从内存利用角度

    int age;//分配4字节内存空间, 存储年龄 ok
    unsigned char age;//分配1字节内存空间, 存储年龄 ok 0-255

    int height = 182;
    float height = 182.5;

    char int long  flont double short

    printf("你好\n");

unsigned - 非负数 -

两点继续

