
今日内容:
一.指针
1.指针和函数的关系
指针 - 形参
指针 - 返回值
    不可以返回 -
        局部变量地址
            函数结束后 - 局部变量被释放 - 其地址不可以访问 - 野指针
            int a = 100;
            return a;//ok - 返回的是变量a的值
            return &a;//error - 返回的是变量a的地址
    可以返回 -
        静态局部变量地址
        静态全局变量地址
        全局变量地址
        因为声明周期的问题
    在函数内部定义指针变量 - 变量 - 程序结束会被释放


2.泛型指针 - 精髓 - void*
    int * - int
    char * - char
    double * - double
    ...

int a = 100;
int* pa = &a;//只能访问4字节 - 限制
*pa - 以pa中的地址为准, 获取4字节数 - 100

return *pa;//返回的 - *pa = a - 还是a的值

void * -> int *
    数据类型转换

3.const关键字演示
实际开发 - 必用 - 常量化
    常量 : 4 6 10 'a'
四种
    常量指针，指针变量保存的地址可以改变, 但是指向的内存值不能改变, 起到保护作用
        int a = 100;
        const int * pa = &a;
        ==
        int const * pa = &a;

        pa++;//ok
        *pa = 1000;//error, 无法更改指针所指向的内存的值
        常量的指针
            pa指向的内存/位置视为常量不能改

            pa          ----->      a
        普通指针变量                当做是常量
                                  const修饰的*pa - 无法更改

    指针常量，
        int a = 100;
        int * const pa = &a;//pa- 指针常量 pa对应的内存中数据不可以更改了
        *pa = 1000;//ok

        int b = 10000;
        pa = &b;//error, 指针本身无法更改
            pa          ----->      a
           看做是常量               普通变量

    常量指针常量，指针变量保存的地址和指向的内存都不能修改
    
    //const象征内容，* 象征地址
    //指针常量定义必须初始化
    //常量指针：const修饰的是指针，指针指向可以改变，但是指针指向的值不能改变
    //指针常量：修饰的是常量，指针指向不可改变，但是在指针指向的值可以改变
    //常量指针常量：指针指向和指针指向的值均不可改变

谁在前就先读，谁就不许变

显示, 健壮性较弱
void print(int* p){
    printf("*p = %d\n", *p);
    *p = 100;
}

main:
    int a = 200;
    print(&a);//将a的地址传入print函数, 输出到屏幕上

代码会报错吗 - 不会报错
    只是向print输出, 更改了 - 还不报错

//p指向的内存, 只能读, 不能写
//提高了代码的健壮性
void print(const int* p){
    printf("*p = %d\n", *p);
    *p = 100;//报错,error
}

main:
    int a = 200;
    print(&a);//将a的地址传入print函数, 输出到屏幕上

static + const  - 笔试都会考

    const:
        如果将const放到了*的前面
            int a = 100;
            const int *pa = &a;
                理解为const在修饰*pa - *pa的值不能改, pa可以改
        如果将const放到了*的后面
            int a = 100;
            int* const pa = &a;
                理解为const在修饰pa - pa的值不能改, *pa可以改

4.通过指针访问任意大小的内存空间

    int a = 0x12345678;
    &a - 存储的就是第一个字节的地址 - 0x1000(内存图)
    (char *)&a - 该地址上存储1字节数据

指针的强大 - 慎用
    解引用 : 通过地址获取地址上数据 *
    取地址 : 具有变量获取变量地址 &

很特殊的数据类型 :unsigned long
    占据字节:
    unsigned long  :
        32位系统 - 4字节
        64位系统 - 8字节

    指针/地址 :
        32位系统 - 4字节
        64位系统 - 8字节

可以使用unsigned long变量存储地址 - 不建议使用

练习 :
    键盘输入学生的人数, 输入学生的成绩, 输出:
        总分 平均分 最高分

二.字符串
