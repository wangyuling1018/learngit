一.数据类型
float double类型没有unsigned
sizeof关键字
    计算内存的大小, 以字节为单位
使用格式 :
    sizeof(参数)  - 数组 - 必玩
参数 :
    变量
    数据类型
    表达式
    立即数  数字本身

    int a = 100;
    sizeof(a) sizeof(int)
    sizeof(520)
    sizeof(1+1)

注意 : 赋值操作无效
    int a = 100;
    sizeof(a = 520);
    printf("a = %d\n", a);

sizeof - %lu  //sizeof的占位符是%lu
01sizeof.c

细说基本类型
1.字符类型
字符常量
    使用单引号括起来表示, 例如'A'
    字符本质上在内存中存储的是一个整数, 字符的ascii码

终端 : man ascii
每个字符和其对应的数字
Oct   Dec   Hex   Char
八     十    十六   字符
      48            '0'
      49            '1'
      50            '2'

      ...
      65            'A'
      66            'B'
      ...
      
      97            'a'
      98            'b'

'a' - 'B' = 97 - 66 = 31
本质上就是一个整数

字符变量

char c = 'a'; //本质上存储数字97
    %c - 'a'
    %hhd - 97
        %hhd 理解为 half half %d
            %d占据字节数一半的一半 1个字节


    'E' - 69

    char c = 'E';//本质上将数字69存起来
    两个处于等价的关系
    char c = 69;

    转义字符演示
    \v 垂直制表
    \b 退格 backspace
    printf("hello\r123456\n");//123456
        
    $#123456

练习时间 :
    将数字字符转换为整数
    '5' - 5

    '0' - 0
    '1' - 1
    ...

    '5' - 53  -> 5 -48
    '6' - 54  -> 6 -48
    '8' - 56  -> 8 -48
    任何的数字字符 -> 数字
        -48
    48 - '0' //

    
    从键盘获取一个小写字母, 转换为大小字母 'a' - 'A'
    char c1;
    printf("请输入一个小写字母:")
    scanf("%c", &c1);
    'a'     'A'
    97      65  减法    32
    'b'     'B'
    98      66  减法    32
    'c'     'C'
    99      67  减法    32

    'a' - 'A'
    'b' - 'B'
    'c' - 'C'

    ASCII码

    提示 - 转换都要使用数字 - 字符的本质

    04char.c

字符类型 - 本质上就是一个整数

2.整型数据
    short - 短整型数据
        short a;
        ==
        short int a;

    long - 长整型数据
        long a;
        ==
        long int a;

    long long  - 8字节有符号整型数据
    unsigned long long - 8字节无符号整型数据

    int             %d
    unsigned int    %u  unsigned %d
    short           %hd half %d
    unsigned short  %hu half %u
    long            %ld long %d
    unsigned long   %lu long %u
    long long       %lld long long %d
    unsigned long long $llu long long %u

    int long 说道一下


    sizeof %lu 得到的内存的大小, 会使用%lu作为占位符, unsigned long 数据存储字节数
3.浮点数类型
    float   %f/ %g
    double  %lf / %lg
    字面值后缀 :
        程序中见到浮点数
        1.23 5.7 66.7 -> 都是double类型
        1.23f 1.23F 5.7F 5.7f -> float类型
    1.23f :
        该数据类型为float类型, 数据位1.23

    %f/lf - 将小数点后0显示到
    %g/%lg - 没有小数点后的0

    float f = 1.1;//后面没有f ok的
        f表示的就是1.1

练习 :
    从键盘读取圆的半径, 计算并输出圆的面积和周长
    读取 : scanf
    面积 : 3.14 * r * r
    周长 : 3.14 * 2 * r
    输出 : printf
    06circle.c
    16分继续

二.进制转换
十进制 - 人 - 逢十进一 - 0~9
    人常用
二进制 - 计算机 - 逢二进一 - 0~1
    计算机常用
    十进制      二进制
    0             0
    1             1
    2            10
    3           011
    4           100
    5           101
    6           110
    7          0111
    8          1000
    9          1001
    10         1010
    11         1011
    12         1100
    ...

01010101010
计算机 - 笨
    嵌入式 - 高电平 1 低电平 0

二进制数对应的十进制数据是多少呢? 位与权

明确 :
1.数据在内存硬件上以二进制的方式存储
    1个字节 = 8bit
    1Byte = 8bit
    2Byte = 16bit
    4Byte = 32bit
    ...
    1B = 8b

二进制特点 :
二进制数据的每个bit位都有编号, 从右向左, 从0开始依次递增

char类型 : 1字节存储
    高     低
    <-------    从右向左依次递增, 从0开始
    76543210    每个位的编号
    01010101    二进制数据

    第0位, 叫做bit0位,  该数据数据, bit0位上的数据

short类型 : 2字节存储
    第一个字节存储7-0这8位
    第二个字节存储15-8这8位
    高                        低
    <----------------------------
    15 14 13 12 11 10 98 76543210    每个位的编号
    0  1  0  1  0  0  10 10100101    二进制数据

二进制数据中每个1单独表示一个十进制数据, 这个十进制数是2的编号次方
举例 :
    76543210    位编号
    01000000    [6]上的1对应的十进制数字是2的6次方=64

    76543210    位编号
    00010000    [4]上的1对应的十进制数字是2的4次方=16

二进制数中相邻的两个1, 左边是右边的2倍
    76543210    位编号
    01100000
            [6]上的1对应的十进制数字是2的6次方=64
            [5]上的1对应的十进制数字是2的5次方=32

逢二进一
    例如 :
        00001111 + 1 = 00010000
        00001110 + 1 = 00001111

练习 :
    1.输入购买商品的价格和购买数量, 计算总金额, 输出到屏幕上.
    shopping.c
    2.两天讲的东西好好练练.
        练到啥程度 - 不看代码也能敲出来
