
今日内容:
一.联合和枚举 + 结构体 - 复合数据类型
1.联合体 - union
    自己创建的数据类型
    结构体非常类似

    联合体所有的成员共用一块内存区域, 且起始地址相同

    union X {
        char   a;
        short  b;
        int    c;
        double d;
    }x;
    __ __ __ __ __ __ __ __
    00 01 02 03 04 05 06 07
    __
    a
    __ __
    b  b
    __ __ __ __
    c  c  c  c
    __ __ __ __ __ __ __ __
    d  d  d  d  d  d  d  d

    所有的成员共用一块内存区域
    如果将成员a修改, 那么其他的成员的值, 也会变化

    union{
        unsigned int un;
        unsigned char uc[4];
    }mb;//直接定义联合体变量mb, 分配4字节
    mb.un = 0x12345678;//向4字节内存写入数据0x12345678
//un
//0x78  0x56  0x34  0x12
//__    __    __    __
//uc[0] uc[1] uc[2] uc[3]

主机字节序
大端和小端
int val = 0x12345678;

如果高数位放在了低地址, 大端;
如果低数位放在了低地址, 小端;

小端 :
    __ __ __ __
    00 01 02 03 地址
    78 56 34 12 小端
大端 :
    __ __ __ __
    00 01 02 03 地址
    12 34 56 78 大端

intel,arm - 小端
PowerPC, 网络字节序 - 大端


31 30 29 ... 6543210 数位
左边高 右边低
int val = 0x12345678; //4个字节 - 32bit - 左边的是高数位, 右边的是低数位
mb.un = 1;//0x00000001

小端 :  低数位放在低地址
    __ __ __ __
    00 01 02 03 地址
    01 00 00 00 小端
大端 :  高数位放在低地址
    __ __ __ __
    00 01 02 03 地址
    00 00 00 01 大端

面试/笔试题

课下练习:
    使用指针计算大小端.
    玩 - 强转
    #include <stdio.h>
    int main(){
        int a = 1;
        int* pi = &a;
        if(*(char*)pi){
            printf("小端.\n");
        }else{
            printf("大端.\n");
        }
        return 0;
    }


联合体的成员 - 结构体
结构体的成员 - 联合体

2.枚举
提高代码可读性

二.高级指针
1.函数指针 - 变量
在内存 - 有地址 - 有指针

函数名 - 函数首地址 - 存储起来 - 指针变量 - 函数指针
//函数名其实就可以理解为是一个地址。

函数指针变量占据几个字节 - 32位系统 - 4字节

int   (*pfunc)(int, int) = add;

int sum = add(100, 200);
==
int sum = pfunc(100,200);

怎么用函数名，就怎么用函数指针。

//函数指针本质上就是自定义的数据类型, 将来可以使用这种数据类型来保存函数的地址
                            |
                          可以使用typedef来给数据类型起别名
                            |
                          后续使用别名去定义函数指针变量
typedef

int (*pfunc)(int, int) = add;
想要定义另一个函数指针变量 指向sub;
int (*pfunc1)(int, int) = sub;

缺点 - 定义的时候, 很麻烦

回调函数 -
    函数的参数是函数
QT - 信号和槽 - 回调函数



typedef int (*p)(int, int);
p pfunc = add;

2.数组指针和指针数组

数组指针 - 指针 - 指向了整个数组
指针数组 - 数组 - 存储元素都是指针



多级指针和二级指针


预习
    数组指针
    二级指针
    malloc
    ----------------
    文件操作

课下练习:
    使用指针计算大小端.
    玩 - 强转
