
今日内容:
问题 :
    如果想要从键盘获取一个字符串,需要提供什么来存储?
    A.字符指针
        char* str = NULL;
    B.字符数组
        char str[100] = {0};
        只可以选择B
        字符指针 - 存储指针变量 - 存储 - 永远存储地址 - 不可以存储字符串
        定义了一个数组 - str - 把字符串存入数组里

    printf("请您输入一个字符串:");
    scanf("%s", str);
-------------------------------

一.预处理指令
什么是预处理 -
    编译步骤 -
        预处理
        编译
        汇编
        链接
预处理 - 编译的第一步
在预处理阶段就会使用的指令 - 预处理指令
    主要做 [[替换和拷贝]]
1.文件包含指令
    #include
    -I - gcc选项, 指定先去哪儿找头文件
    gcc -E string.c -o string.i -I /home/tarena
    1.先去 /home/tarena 找头文件
    2. <> - 系统路径找
       "" - 当前目录找 - 系统目录找
2.宏定义指令
    #define
    会使用后名称后面的所有内容作为替换内容
    #define PI (3.14)
            使用 (3.14) 作为替换  //有括号，最好加括号
    #define PI 3.14
            使用 3.14 作为替换

gcc xx.c -o xx
gcc xx.i -o xx

函数 - 宏函数效率高很多

宏函数定义中的x最好加括号，否则不是想要的结果
#define SQUARE1(x) (x*x) //定义求平方宏函数  //不要这么写
#define SQUARE2(x) ((x)*(x)) //定义求平方宏函数  //ok

宏函数缺点 - 大量宏函数
    SUQARE(1) - 100000个宏函数 - 大量替换 - 体积很大

    suqare(1) - 函数 - 不会替换 - 一份 -
        函数效率 大于 宏函数
    
inline - 内联 - 内联函数（既可以当做函数，又可以当作宏函数）
    宏函数 - 效率高 - 体积大
    函数 - 体积小 - 效率低
    
这个功能要调用1万次，就用普通函数，这个函数用不了几次，就用宏函数。

#undef SUB
    从该代码后, 不可以使用SUB这个宏了, 之前的代码不受影响

gcc -D
    定义宏 - 定义的时候 - 有时候不知道宏的值是多少 - gcc -D
    定义宏 - 定义的时候 - 有时候不知道宏的内容是什么- gcc -D
        #define NAME  ("zhangsan") //不能这么定义

    在运行的时候, 去定义宏的值
    gcc -D定义宏的值

如果后续使用gcc -D选项 - 传参 - 切记不要忘记传参 - 报错


调试程序相关宏
    预定义宏                      说明
    __FILE__                   所在文件名 %s
    __LINE__                   所在行号 %d
    __FUNCTION__ / __func__    所在函数名 %s
    __DATE__                   编译日期 %s
    __TIME__                   编译时间 %s
 
    
条件编译指令
条件编译
    符合条件 代码会被编译到可执行程序
    不符合条件 代码不会被编译到可执行程序中

条件成立 - 执行 - 编译进来
条件不成立 - 不执行 - 不编译

#if 表达式
    表达式为非0 - 就会编译 - 否则不变异
#endif

05if.c

vim h.c

int arr[SIZE] = {0};

        如果没有#define语句, 没有给SIZE赋值
        认为 gcc -DSIZE=100 h.c -o h
        认为在当前代码中, 定义了一个宏SIZE, 并且赋值为100

        编译 gcc h.c -o h
        认为在当前的代码中, 并没有定义宏SIZE, 会报错

目前有#define HI (100)
    认为 定义了HI宏
    没有这句话, 代码中也没有HI, 认为没有定义HI这个宏

如果 数据 C语言 -
    0   - 假 - 条件不成立
    非0  - 真 - 条件成立

普通if..else - 任何内容都会编译

二.大型程序编程框架

求相减

不可能没有错误
    有了错误 - 怎么办

上百个错误 - 一个一个解决 - 从第一个开始解决

上午九点 -
    大型程序
    结构体
