
一.指针
1.三大概念
    指针 -
        指向什么的一个针

        指南针 - 指向南边的一个磁针

    小明 - 北京市海淀区天通苑2区5号楼3单元201
        - 地址
        - 直到小明家的地址 - 通过[地址]找到[小明]

    可以通过内存的地址找到内存中的数据, 这个过程称为指针

    地址 - 名词
    指针 - 动词
    地址就是指针, 指针就是地址

地址 指针 指针变量

地址 - 内存 - 一个一个字节 - 编号 - 地址 - 名词
指针 - 通过地址可以访问对应的内存 - 动词
    地址就是指针,指针就是地址
指针变量 - 变量, 存储是一个指针/地址 - 将这样的变量 - 指针变量

2. 定义指针变量 - 还是变量
    普遍性 -
            变量 - 开辟内存空间
                - 存储区 - 地址
                - 值是可以改变的 - 可以存储其他地址
                - 变量自增
                    int a = 100;
                    a++;//a=101

                    int *pa = &a;
                    pa++;//pa= pa + 1*4 = pa + 4
    特殊性 -
            指针变量 -
                    32位 - 分配4字节
                    64位 - 分配8字节
                        用于存储地址
    int *pa, *pb;//pa和pb是两个指针
    int *pa, pb;//pa是指针, pb就是int类型变量

    - 指针是没有数据类型的, 就是一个字节的地址
        指针就是地址
    - sizeof(指针变量)
        32位 - 4字节
            使用4字节数据来存储一个地址
            0x100 == 0x00000100
        64位 - 8字节
            使用8字节数据来存储一个地址
            0x100 == 0x0000000000000100
    - 问 : int *pa; int置于何地?
        指针变量前面 - 数据类型 - 指向的内存使用的
    - 指针内存图

        char* pa = &a; //将a的地址给pa变量
        *pa - 通过地址获取数据 == *(&a) == a

        *pa - 获取pa存储地址上的数据 -
            
        变量pa也有存储区 - 也有地址 - 操作系统给的
    - 指针变量可以指向内存的任意地址
3.空指针和野指针
    指向一块不可用内存区域 - 野指针

02pointer.c

    int *p = 0x1000;//地址肯定存在 - 野指针

    int *pa;

4.指针计算
    地址 + n
    地址 + n * sizeof(数据类型)

    int *pa = &a;
    pa++; //pa = pa + 1 = pa + 1 * sizeof(int) = pa + 4

    char a = 'a';
    char* pa = &a;//pa=10 此时是定义了变量pa存储a的地址10
    pa++;//pa=11, pa=pa+1=11, pa存储了11

    char *pp = &a;//pp=10,定义了变量pp存储a的地址10

        小明家 - 北京市海淀区天通苑2区5号楼3单元201
            - 记事本 - 记录了小明家的地址
            - 记事本 - 记录了小亮家的地址

        我的记事本 - 记录了小明家的地址

    short b = 100;
    short* pb = &b;//pb=11

    __ __ __ __
    10 11 12 13 地址
    a  b  b

5.指针和数组之间的关系
数组 - 内存 - 有地址 - 指针就可以指向数组
使用一个指针, 指向一个数组
arr - 数组首地址
arr+i = 数组中第i个元素的首地址
*(arr + i) - 获取第i个元素的数据
arr[i] == *(arr + i)
数组名对应的地址是无法改变
arr = 100;//error
定义指针变量来存储数组的首地址
    int *pa = arr;//pa保存数组的首地址, pa指向a

计算数组中元素的个数, 无法使用指针去解决问题
    sizeof(pa) = 4/8
        指针永远占据了4/8字节
        不可以将pa完完全全的当做数组名去使用
    sizeof(arr) = 4 * 4 = 16

    sizeof(pa[0]) = 4
    sizeof(arr[0]) = 4

int arr[4] = {1,2,3,4};
__ __ __ __ | __ __ __ __ | __ __ __ __  | __ __ __ __
0  1  2  3    4  5  6  7    8  9  a  b     c  d  e  f       地址
arr[0]=1      arr[1]=2      arr[2]=3       arr[3]=4
arr=0
arr + 0 = 0 + 0*4 = 0
    *(arr + 0) = 1
    arr[0]
arr + 1 = 0 + 1*4 = 4
    *(arr + 1) = 2
arr + 2 = 0 + 2*4 = 8
    *(arr + 2) = 3
arr + 3 = 0 + 3*4 = c
    *(arr + 3) = 4

只要你的内容在内存中 - 指针都可以指向 - 区别 - 是否可以访问
05pointer_arr.c

指针变量 - 变量 - 存储地址
