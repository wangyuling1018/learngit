1、什么是UC
U是指unix操作系统。Unix操作系统是使用C语言实现的系统级软件。
C是指C语言，就是大家上门课程学习的语言。
UC是指使用C语言在操作系统Unix上的用户编程。unix系统向用户提供了大量的接口。用户通过系统提供的接口，使用操作系统提供的服务。
想要写出功能强大的程序，一定要借助操作系统提供的功能。
比如:网络通信，进程管理，线程管理等。

学习内容：
    库文件制作和使用
    内存管理
    文件管理和文件系统
    进程管理
    信号（软中断）
    进程间通信
    网络管理
    线程管理
    
什么是环境变量：
    1、每个进程都有一张自己的环境变量表，表中的每个条目都是形如“键=值”形式的环境变量
    2、进程可以通过环境变量访问计算机的资源
    3、在终端下输入env命令，可以查看环境变量列表
    4、通过echo $name可以查看某个环境变量的值
环境变量的添加：
    1、在终端窗口输入FOOD=guobaorou，表示向当前进程中增加名为“FOOD”值为“guobaorou”的环境变量，
    如果环境变量已经存在，则更改其值
    2.强调！ 在“=”左右不要加空格
    
环境变量的类别：
    环境变量分成两大类：
        全局环境变量：当前shell和其子进程都是可见的
        局部环境变量：只有当前shell可见
    将局部环境变量设置成全局变量：
        export name   //export FOOD --FOOD变成全局变量
    删除环境变量：
        unset name
      
    
    
    
常见环境变量
    PATH环境变量
        echo $PATH
        PAHT=/home/tarena/Qt5.4.1/5.4/gcc_64/bin:/home/tarena/Qt5.4.1/Tools/Qt Creator/bin:/home/tarena/bin:/home/tarena/.local/bin:/usr/local/sbin:/usr/lo cal/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
    该环境变量所记录的是bash进程对命令的检索路径
        格式为":"分割的多个路径。当在bash下输入命令的时候，首先，在第一个路径下找该命令的可执行程序，找到就执行，不再向后找;
        如果找不到，在第二个路径下找，找到就执行，不再向后找;如果找不到，继续下一个路径。如果到最后一个路径都找不到，就提示该命令不能找到的错误
        //ls 可执行程序，再/usr/bin目录下。
    ➢PATH环境变量
        对PAHT环境变量进行设置，添加当前路径到环境变量PATH=$PATH:.
        在命令行执行程序即可省略“/”。
        ./a.out ---> a.out

如果没有特殊操作，对环境变量的设置仅对当前shell进程有效，开启新的终端，之前的操作不会被保留。
在家目录下有名为.bashrc的脚本文件，每次bash进程启动前，都会执行该脚本文件的内容。如果希望环境变量的设置对每个bash进程都有效，可以将环境变量的设置写在该脚本文件中。
执行source ~/.bashrc 命令，可以使文件立即生效。


笔记：
    查看当前bash的环境变量：env
    查看某个环境变量：echo $PATH
    添加局部环境变量：FOOD=guobaorou
    修改局部环境变量：FOOD=hello
    将局部环境变量设置成全局变量：export FOOD
    删除环境变量：unset FOOD
    全局环境变量 - env 可以看见
    局部环境变量 - env 不可看见
    shell是用户和内核交互的桥梁
    终端窗口shell打开默认运行bash，终端窗口不代表bash，还可以运行vim
    bash相当于小管家，各种命令本质是可执行文件，与a.out二进制可执行文件没有区别，
    ls命令 - bash根据PATH环境变量的路径找，各个目录中有没有ls可执行文件。
    PATH - 可执行程序检索路径
    添加环境变量：PATH=$PATH:可执行程序路径 - 只当前shell生效，关闭shell后失效
    添加环境变量对每个bash进程都有效：
        vi ~/.bashrc
        PATH=$PATH:可执行路径
        保存
        source ~/.bashrc
    
    
