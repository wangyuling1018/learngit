笔记：
1. 不是所有 匿名对象生命周期 都 短暂
    new Human；
    基类子对象

多重继承
    一个类可以同时从多个基类继承实现代码
        - 智能手机系统
    一个类可以同时从多个基类继承实现代码
        - 课堂教学系统
    多重继承的内存布局   miorder.cpp
        - 子类对象中的多个基类子对象，按照继承表的顺序依次被构造，析构的顺序则与构造严格相反，各个基类子对象按照从低地址到高地址排列
    多重继承的类型转换   convcmp.cpp
        - 将多重继承的子类对象的指针，隐式转换为它的基类类型,编译器会根据各个基类子对象在子类对象中的内存位置，进行适当的偏移计算。
        - 以保证指针的类型与其所指向目标对象的类型-致
        - 反之，将任何一个基类类型的指针静态转换为子类类型，编译器同样会进行适当的偏移计算
        - 无论在哪个方向上，重解释类型转换(reinterpret cast)都不进行任何偏移计算
        - 引用的情况与指针类似，因为引用的本质就是指针
    解围绕多重继承，历来争议颇多
        - 现实世界中的实体本来就具有同时从多个来源共同继承的特性，因此多重继承有助于面向现实世界的问题域直接建立逻辑模型
        - 多重继承可能会在大型程序中引入令人难以察觉的BUG,并极大地增加对类层次体系进行扩展的难度
    名字冲突问题  scope.cpp
        - 如果在子类的多个基类中，存在同名的标识符，那么任何试图通过子类对象，或在子类内部访问该名字的操作，都将引发歧义。
    名字冲突问题解决方法
        - 子类隐藏该标识符
        - 通过作用域限定操作符"::" 显式指明所属基类

