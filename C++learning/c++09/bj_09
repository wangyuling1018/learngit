
类的静态成员
静态成员变量  static.cpp
    静态成员变量属于类而不属于对象
        - 静态成员变量不包含在对象中，进程级生命期
        - 静态成员变量的定义和初始化，只能在类的外部而不能在构造函数中进行。
        - 静态成员变量依然受类作用域和访问控制限定符的约束
        - 访问静态成员变量，既可以通过类也可以通过对象
        - 静态成员变量为该类的所有对象实例所共享
        
静态成员函数 static2.cpp
    静态成员函数属于类而不属于对象
        - 静态成员函数没有this指针，也没有常属性
        - 静态成员依然受类作用域和访问控制限定符的约束
        - 访问静态成员函数，既可以通过类也可以通过对象
        - 静态成员函数只能访问静态成员，而非静态成员函数既可以访问静态成员，也可以访问非静态成员


    类                       对象
    静态成员变量              非静态成员变量
    静态成员函数              非静态成员函数
    //静态成员函数可以访问静态成员函数、静态成员变量
    //非静态成员函数可以访问非静态成员函数、非静态成员变量、静态成员变量、静态成员函数，四通八达。
    事实上，类的静态成员变量和静态成员函数，更象是普通的全局变量和全局函数，只是多了一层类作用域和访问控制限定符的约束，相当于具有成员访问属性的全局变量和全局函数



单例模式(Singleton)
    一个类仅有一个实例(对象)
    将包括，类的拷贝构造函数在内的所有构造函数私有化,防止使用者在类的外部创建对象
    公有静态成员函数getInstance()是获取对象实例的唯一渠道
    饿汉式:无论用不用，程序启动即创建  hungry.cpp
    懒汉式:用的时候创建，不用了即销毁  lazy.cpp
        -引用计数


