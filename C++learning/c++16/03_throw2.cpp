//
//  03_throw2.cpp
//  C++learning
//
//  Created by 王育玲 on 2023/2/25.
//

/*捕获异常
 1.建议在catch子句中使用引用接收异常对象，避免因拷贝构造带来的性能损失
 2.推荐以匿名临时对象的形式抛出异常
 3.异常对象必须允许拷贝构造和析构。---意思是：拷贝构造和析构 必须公有，不能私有
 */

//异常捕获的几点建议
#if 0
#include <iostream>
using namespace std;
class A{
public:
    A(){}
    A(const A& that){
        cout << "A类的拷贝构造函数被调用" << endl;
    }
    ~A() {}
};
// 以上的代码模拟类的设计者(例如:类库、别人设计的类、自己设计的类)
// --------------------------------------
// 以下的代码模拟类的使用者

void foo(){
    //A a;
    //throw a; //标准库将利用a克隆一个副本a
    throw A(); //标准库将利用匿名对象克隆一个副本a 但是一般会被编译器优化了， 抛出匿名对象，没有一次克隆了
}
int main( void ) {
    try{
        foo();
    }
    //catch(A e){ //利用标准库中的副本a克隆了e
    catch(A& e){ //利用引用，少调用一次克隆
        
    }
    return 0;
}

#endif

