
C++11篇之前言
    1990, The Annotated C++ Reference
    1998,ISO/lEC 15882:1998,C++98
    2003,ISO/IEC15882:2003,C++03(修订140多个bug)2005,TR19768报告，收集意见，加入14个标准库扩展2007,SC22(表决)，确定新标准的核心功能
    2008,70个语言特性、83个库特性、300个缺陷修正2010,第二轮草案评议(厂商投反对票)
    2011,ISO/IEC 15882:2011,C++11
    2012,C++11官方文档正式出版

C++语言各版本目标
    - C++98的目标:比C强、要抽象、O0、泛型
    - C++03的目标:修补98的bug
    - C++11的目标:库、更简单、效率更高

C++11新特性：类型推导（auto）、类型计算（de、列表初始化、Lambda表达式、右值引用、移动语义

类型推导
    auto关键字 auto1.cpp
        C++98中，auto表示栈变量，通常省略不写
            void foo(void) {
            int i;
            auto int j;//表示在栈里分配的
            )
        C++11中，给auto赋予新的语义，表示自动类型推导
        √既根据对变量进行初始化时所使用的数据的类型，由编译器自动推导出所定义变量的实际类型
            例如:
            auto i=10; →int i = 10;
            auto j=i; →int j = i;
    auto类型推断本质: auto1.cpp
        - 按照定义独立对象并根据初始化数据的类型进行推导。
        - 无法自动推断const，只能在auto的上下文显示指明。
        - 如果给出的初始化数据类型为常量指针，则可以自动推导const
    auto与引用联用   auto2.cpp
        -按照定义独立对象并根据初始化数据的类型进行推导，所以不可能推导出引用
        -除非auto的上下文指明按照引用推导
        -若指明按引用推导并且目标带有常属性，则可以自动推导const
    auto关键字的使用限制    auto3.cpp
        -函数形参类型无法推导 (C++14标准支持)
        -类的成员变量无法推导。    //因为仅仅是声明


